{\rtf1\ansi\ansicpg1252\uc1 \deff1\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Times;}
{\f5\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier;}{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}
{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f16\froman\fcharset2\fprq2{\*\panose 00000000000000000000}Bodoni-WP;}
{\f17\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}BroadwayEngraved-WP;}{\f18\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}Broadway-WP;}{\f19\froman\fcharset2\fprq2{\*\panose 00000000000000000000}Century-WP;}
{\f20\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}CooperBlack-WP;}{\f21\fscript\fcharset2\fprq2{\*\panose 00000000000000000000}CommercialScript-WP;}{\f22\fswiss\fcharset2\fprq2{\*\panose 00000000000000000000}Eurostile-WP;}
{\f23\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}Hobo-WP;}{\f24\fscript\fcharset2\fprq2{\*\panose 00000000000000000000}MurrayHill-WP;}{\f25\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}OldEnglish-WP;}
{\f26\froman\fcharset2\fprq2{\*\panose 00000000000000000000}OldTown-WP;}{\f27\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}Stencil-WP;}{\f28\fdecor\fcharset0\fprq2{\*\panose 00000000000000000000}ZapfDingbats;}
{\f29\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}LinePrinter;}{\f30\froman\fcharset0\fprq2{\*\panose 00000000000000000000}CG Times (W1);}{\f31\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers (W1);}
{\f32\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}WP OverflowSet;}{\f33\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}Ribbon131 Bd BT;}{\f34\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Humanst521 Lt BT;}
{\f35\froman\fcharset0\fprq2{\*\panose 00000000000000000000}GeoSlab703 Lt BT;}{\f36\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Swis721 BlkEx BT;}{\f37\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Humanst521 Cn BT;}
{\f38\fdecor\fcharset0\fprq2{\*\panose 00000000000000000000}Onyx BT;}{\f39\fdecor\fcharset0\fprq2{\*\panose 00000000000000000000}CaslonOpnface BT;}{\f40\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}EngraversGothic BT;}
{\f41\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}ShelleyVolante BT;}{\f42\froman\fcharset0\fprq2{\*\panose 00000000000000000000}BernhardMod BT;}{\f43\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}Brush738 BT;}
{\f44\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}Blackletter686 BT;}{\f45\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Arrus BT;}{\f46\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Arrus Blk BT;}
{\f47\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}OzHandicraft BT;}{\f48\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}WP BoxDrawing;}{\f49\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}WP Phonetic;}
{\f50\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}WP TypographicSymbols;}{\f51\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}WP IconicSymbolsA;}{\f52\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}WP IconicSymbolsB;}
{\f53\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}WP MathA;}{\f54\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}WP MathB;}{\f55\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}WP MathExtendedA;}
{\f56\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}WP MathExtendedB;}{\f57\fmodern\fcharset255\fprq2{\*\panose 00000000000000000000}Modern;}{\f58\fscript\fcharset255\fprq2{\*\panose 00000000000000000000}Script;}
{\f59\froman\fcharset255\fprq2{\*\panose 00000000000000000000}Roman;}{\f60\fswiss\fcharset0\fprq1{\*\panose 00000000000000000000}MS Dialog;}{\f61\fnil\fcharset0\fprq1{\*\panose 00000000000000000000}Small Fonts;}
{\f62\froman\fcharset0\fprq2{\*\panose 00000000000000000000}CG Times;}{\f63\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers;}{\f64\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}
{\f65\fswiss\fcharset0\fprq2{\*\panose 020b0504020203020204}News Gothic MT;}{\f66\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}Lucida Handwriting;}{\f67\fswiss\fcharset0\fprq2{\*\panose 020b0602030504090204}Lucida Sans;}
{\f68\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans Unicode;}{\f69\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f70\fswiss\fcharset0\fprq2{\*\panose 020b0502020202020204}Century Gothic;}
{\f71\fmodern\fcharset0\fprq1{\*\panose 02010509020102010303}OCR A Extended;}{\f72\froman\fcharset0\fprq2{\*\panose 02040603050505030304}Calisto MT;}{\f73\fswiss\fcharset0\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}
{\f74\fswiss\fcharset0\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}{\f75\fswiss\fcharset0\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}{\f76\fdecor\fcharset0\fprq2{\*\panose 04040403030d02020704}Matisse ITC;}
{\f77\fdecor\fcharset0\fprq2{\*\panose 04020404030d07020202}Tempus Sans ITC;}{\f78\fdecor\fcharset0\fprq2{\*\panose 04040506030f02020702}Westminster;}{\f79\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}
{\f80\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f81\fscript\fcharset0\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f82\fswiss\fcharset0\fprq2{\*\panose 020b0806030902050204}Impact;}
{\f83\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f84\froman\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f85\fswiss\fcharset0\fprq2{\*\panose 020b0802020104020603}Tw Cen MT;}
{\f86\fswiss\fcharset0\fprq2{\*\panose 020b0606020104020203}Tw Cen MT Condensed;}{\f87\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f88\fswiss\fcharset2\fprq2{\*\panose 050b0604020202020204}Arial Special G1;}
{\f89\fswiss\fcharset2\fprq2{\*\panose 050b0604020202020204}Arial Special G2;}{\f90\fswiss\fcharset2\fprq2{\*\panose 050b0506020202030204}Arial Narrow Special G1;}{\f91\fswiss\fcharset2\fprq2{\*\panose 050b0506020202030204}Arial Narrow Special G2;}
{\f92\froman\fcharset2\fprq2{\*\panose 05020603050405020304}Times New Roman Special G1;}{\f93\froman\fcharset2\fprq2{\*\panose 05020603050405020304}Times New Roman Special G2;}
{\f94\fswiss\fcharset0\fprq2{\*\panose 020b0506030101010103}Abadi MT Condensed;}{\f95\froman\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f96\froman\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}
{\f97\fswiss\fcharset0\fprq2{\*\panose 020b0706040902060204}Haettenschweiler;}{\f98\froman\fcharset0\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}{\f99\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}
{\f100\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}{\f101\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}MS Outlook;}{\f102\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Bookshelf Symbol 3;}
{\f103\froman\fcharset0\fprq2{\*\panose 02040502050405020303}Georgia;}{\f104\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f105\fmodern\fcharset0\fprq1{\*\panose 020b0509000000000004}Andale Mono;}
{\f106\fmodern\fcharset2\fprq1{\*\panose 020b0809000000000003}Arial Alternative Symbol;}{\f107\fmodern\fcharset2\fprq1{\*\panose 020b0809000000000003}Arial Alternative;}{\f108\fswiss\fcharset0\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}
{\f109\fscript\fcharset0\fprq2{\*\panose 03060802040406070304}Brush Script MT;}{\f110\froman\fcharset0\fprq2{\*\panose 02040604050505020304}Century Schoolbook;}{\f111\froman\fcharset0\fprq2{\*\panose 02020a06060301020303}Times New Roman MT Extra Bold;}
{\f112\fmodern\fcharset0\fprq1{\*\panose 020b0509020102020204}Letter Gothic MT;}{\f113\fnil\fcharset0\fprq2{\*\panose 02000400000000000000}ESRI Cartography;}{\f114\fnil\fcharset0\fprq2{\*\panose 02000400000000000000}ESRI Environmental & Icons;}
{\f115\fnil\fcharset0\fprq2{\*\panose 02000400000000000000}ESRI Geometric Symbols;}{\f116\fnil\fcharset0\fprq2{\*\panose 02000400000000000000}ESRI Oil, Gas, & Water;}{\f117\fnil\fcharset0\fprq2{\*\panose 02000400000000000000}ESRI Weather;}
{\f118\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}ESRI Transportation & Municipal;}{\f119\fnil\fcharset0\fprq2{\*\panose 02000400000000000000}ESRI Geology;}{\f120\fnil\fcharset0\fprq2{\*\panose 02000400000000000000}ESRI Crime Analysis;}
{\f121\fnil\fcharset0\fprq2{\*\panose 02000400000000000000}ESRI Transportation & Civic;}{\f212\fswiss\fcharset238\fprq2 Tahoma CE;}{\f213\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f215\fswiss\fcharset161\fprq2 Tahoma Greek;}
{\f216\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f217\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f530\fswiss\fcharset238\fprq2 Lucida Sans Unicode CE;}{\f531\fswiss\fcharset204\fprq2 Lucida Sans Unicode Cyr;}
{\f533\fswiss\fcharset161\fprq2 Lucida Sans Unicode Greek;}{\f534\fswiss\fcharset162\fprq2 Lucida Sans Unicode Tur;}{\f596\fmodern\fcharset238\fprq1 Lucida Console CE;}{\f597\fmodern\fcharset204\fprq1 Lucida Console Cyr;}
{\f599\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f600\fmodern\fcharset162\fprq1 Lucida Console Tur;}{\f602\fswiss\fcharset238\fprq2 Arial Black CE;}{\f603\fswiss\fcharset204\fprq2 Arial Black Cyr;}
{\f605\fswiss\fcharset161\fprq2 Arial Black Greek;}{\f606\fswiss\fcharset162\fprq2 Arial Black Tur;}{\f607\fswiss\fcharset186\fprq2 Arial Black Baltic;}{\f608\fscript\fcharset238\fprq2 Comic Sans MS CE;}{\f609\fscript\fcharset204\fprq2 Comic Sans MS Cyr;}
{\f611\fscript\fcharset161\fprq2 Comic Sans MS Greek;}{\f612\fscript\fcharset162\fprq2 Comic Sans MS Tur;}{\f613\fscript\fcharset186\fprq2 Comic Sans MS Baltic;}{\f614\fswiss\fcharset238\fprq2 Impact CE;}{\f615\fswiss\fcharset204\fprq2 Impact Cyr;}
{\f617\fswiss\fcharset161\fprq2 Impact Greek;}{\f618\fswiss\fcharset162\fprq2 Impact Tur;}{\f619\fswiss\fcharset186\fprq2 Impact Baltic;}{\f620\fswiss\fcharset238\fprq2 Verdana CE;}{\f621\fswiss\fcharset204\fprq2 Verdana Cyr;}
{\f623\fswiss\fcharset161\fprq2 Verdana Greek;}{\f624\fswiss\fcharset162\fprq2 Verdana Tur;}{\f625\fswiss\fcharset186\fprq2 Verdana Baltic;}{\f632\fswiss\fcharset238\fprq2 Tw Cen MT CE;}{\f644\fswiss\fcharset238\fprq2 Arial Narrow CE;}
{\f645\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}{\f647\fswiss\fcharset161\fprq2 Arial Narrow Greek;}{\f648\fswiss\fcharset162\fprq2 Arial Narrow Tur;}{\f649\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}
{\f710\froman\fcharset238\fprq2 Bookman Old Style CE;}{\f711\froman\fcharset204\fprq2 Bookman Old Style Cyr;}{\f713\froman\fcharset161\fprq2 Bookman Old Style Greek;}{\f714\froman\fcharset162\fprq2 Bookman Old Style Tur;}
{\f715\froman\fcharset186\fprq2 Bookman Old Style Baltic;}{\f722\froman\fcharset238\fprq2 Garamond CE;}{\f723\froman\fcharset204\fprq2 Garamond Cyr;}{\f725\froman\fcharset161\fprq2 Garamond Greek;}{\f726\froman\fcharset162\fprq2 Garamond Tur;}
{\f727\froman\fcharset186\fprq2 Garamond Baltic;}{\f740\froman\fcharset238\fprq2 Georgia CE;}{\f741\froman\fcharset204\fprq2 Georgia Cyr;}{\f743\froman\fcharset161\fprq2 Georgia Greek;}{\f744\froman\fcharset162\fprq2 Georgia Tur;}
{\f745\froman\fcharset186\fprq2 Georgia Baltic;}{\f746\fswiss\fcharset238\fprq2 Trebuchet MS CE;}{\f750\fswiss\fcharset162\fprq2 Trebuchet MS Tur;}{\f752\fmodern\fcharset238\fprq1 Andale Mono CE;}{\f753\fmodern\fcharset204\fprq1 Andale Mono Cyr;}
{\f755\fmodern\fcharset161\fprq1 Andale Mono Greek;}{\f756\fmodern\fcharset162\fprq1 Andale Mono Tur;}{\f757\fmodern\fcharset186\fprq1 Andale Mono Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\nowidctlpar\adjustright \f1\fs20 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \super \sbasedon10 endnote reference;}{\*\cs16 \additive \super \sbasedon10 footnote reference;}{\*
\cs17 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\*\cs18 \additive \fs16 \sbasedon10 annotation reference;}{\s19\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext19 annotation text;}}{\info{\title #$K+Contents}{\author Emmet P. Gray}{\operator Emmet Gray}
{\creatim\yr1999\mo3\dy5\hr22\min52}{\revtim\yr1999\mo3\dy10\hr20\min34}{\version6}{\edmins50}{\nofpages22}{\nofwords2981}{\nofchars16997}{\*\company home}{\nofcharsws0}{\vern113}}\margl1440\margr1440 
\widowctrl\ftnbj\aenddoc\ftnrestart\hyphcaps0\viewkind1\viewscale100 \fet0\sectd \sbknone\linex0\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \nowidctlpar\adjustright 
\f1\fs20 {\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab CONTENTS}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Table of Contents}}K{\footnote \pard\plain 
\nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab Contents; Index}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:005}}}{\b\fs36\cf2 Contents}{\fs19 
\par 
\par \tab }{\fs19\uldb Introduction to WRPN}{\v\fs19 INTRODUCTION}{\fs19 
\par \tab \tab }{\fs19\uldb WRPN Architecture}{\v\fs19 ARCHITECTURE}{\fs19 
\par \tab }{\fs19\uldb Reverse Polish Notation}{\v\fs19 RPN}{\fs19 
\par \tab }{\fs19\uldb Key Sequences}{\v\fs19 KEY_SEQUENCES}{\fs19 
\par \tab }{\fs19\uldb Operating Modes}{\v\fs19 OPERATING_MODES}{\fs19 
\par \tab }{\fs19\uldb Display}{\v\fs19 DISPLAY}{\fs19 
\par \tab }{\fs19\uldb Functions}{\v\fs19 FUNCTIONS}{\fs19 
\par \tab \tab }{\fs19\uldb Basic/Input}{\v\fs19 BASIC}{\fs19 
\par \tab \tab }{\fs19\uldb Options}{\v\fs19 OPTIONS}{\fs19 
\par \tab \tab }{\fs19\uldb Mathematics}{\v\fs19 MATH}{\fs19 
\par \tab \tab }{\fs19\uldb Stack/Register}{\v\fs19 STACK_REGISTER}{\fs19 
\par \tab \tab }{\fs19\uldb Logical Operators}{\v\fs19 LOGICAL}{\fs19 
\par \tab \tab }{\fs19\uldb Bit-wise Operators}{\v\fs19 BIT_WISE}{\fs19 
\par \tab }{\fs19\uldb Programming WRPN}{\v\fs19 PROGRAMMING}{\fs19 
\par \tab }{\fs19\uldb Future Directions}{\v\fs19 FUTURE_DIRECTIONS}{\fs19 
\par }{\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab INTRODUCTION}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Introduction to WRPN}}K
{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab Introduction}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:010}}}{\b\fs36\cf2 Introduction}{\fs19 
\par 
\par WRPN is a }{\fs19\ul public domain}{\v\fs19 PUBLIC_DOMAIN}{\fs19  calculator for Microsoft Windows that is modeled after the Hewlett-Packard HP-16c.  This is not a Hewlett-Packard product.
\par 
\par WRPN uses }{\fs19\uldb Reverse Polish Notation}{\v\fs19 RPN}{\fs19 , which uses the ENTER key instead of the "=" (equals) key.
\par 
\par In addition to all the functions you'd expect from an ordinary calculator, WRPN also has many features specifically designed for the computer professional:
\par 
\par \tab \bullet  }{\fs19\uldb Floating point, Decimal, Hexadecimal, Octal and Binary}{\v\fs19 OPERATING_MODES}{\fs19  modes
\par \tab \bullet  Word sizes from 1-64 bits/word
\par \tab \bullet  Signed math (1's complement, 2's complement, unsigned)
\par \tab \bullet  Logical operators (and, or, xor, not, masks, etc)
\par \tab \bullet  Bit-wise operators (shift, rotate, rotate with carry, etc)
\par \tab \bullet  32 storage }{\fs19\ul registers}{\v\fs19 REGISTERS}{\fs19 
\par \tab \bullet  4 position }{\fs19\ul stack}{\v\fs19 STACK}{\fs19 
\par 
\par The right-most position in the }{\fs19\uldb display}{\v\fs19 DISPLAY}{\fs19  indicates the current operating mode:
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx720\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par \tab (blank)\tab Floating Point
\par \tab h\tab Hexadecimal
\par \tab o\tab Octal
\par \tab d\tab Decimal
\par \tab b\tab Binary 
\par }\pard \nowidctlpar\adjustright {\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab ARCHITECTURE}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab 
Introduction: WRPN Architecture}}K{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab Architecture}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:015}}}{\b\fs36\cf2 
Introduction: WRPN Architecture}{\fs19 
\par 
\par WRPN uses 64 bit word variables as the internal representation for integer numbers.  When dealing with floating point numbers, the numbers are stored in a typical 8 byte IEEE floating point format.
\par 
\par WRPN has 5 internal registers, 4 of which are arranged in a LIFO }{\fs19\ul stack}{\v\fs19 STACK}{\fs19 .  They are:
\par 
\par \tab stack 3 (the T register)
\par \tab stack 2 (the Z register)
\par \tab stack 1 (the Y register)
\par \tab stack 0 (the X register)\tab \tab last_x\tab 
\par 
\par Values pushed "off the top" of the stack (beyond stack 3) are lost.  However, the value at the top of the stack is preserved when values are "popped".
\par 
\par The bottom of stack (the X register) is the value which is always shown in the display. 
\par 
\par The Last X variable contains the previous value of the X register.
\par 
\par There are 5 flags:
\par 
\par }\pard \nowidctlpar\tx720\tx1440\adjustright {\fs19 \tab flag 0\tab User defined
\par \tab flag 1\tab User defined
\par \tab flag 2\tab User defined
\par \tab flag 3\tab When cleared, trim leading zeros from display
\par \tab flag 4\tab The carry bit
\par \tab flag 5\tab Overflow condition
\par }\pard \nowidctlpar\adjustright {\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab RPN}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab 
Reverse Polish Notation}}K{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab Reverse Polish Notation; RPN}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:020}}}{
\b\fs36\cf2 Reverse Polish Notation}{\fs19 
\par 
\par Reverse Polish Notation is a mathematical notation which more closely models the way you solve algebraic equations.  It uses "Enter" to separate numbers and  mathematical operators appear at the end.  WRPN uses a }{\fs19\ul stack}{\v\fs19\ul STACK}{\fs19 
 to store intermediate values which eliminates the need for parentheses to group intermediate calculations. 
\par 
\par For example, to add 2 plus 3:
\par 
\par }\pard \nowidctlpar\tqc\tx1530\tqc\tx3780\adjustright {\fs19 \tab Tradition notation\tab Reverse Polish Notation
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\tx12960\tx13680\adjustright {\fs19 \tab 2\tab 2
\par \tab +\tab Enter
\par \tab 3\tab 3
\par \tab =\tab +
\par }\pard \nowidctlpar\adjustright {\fs19 
\par Notice that the two numbers are separated by the Enter button and that the operator (the "+" button) comes at the end.
\par 
\par The elegance of this notation becomes more apparent in the following example:
\par \tab 
\par \tab (2 + 3) \'d7 4
\par 
\par }\pard \nowidctlpar\tqc\tx1170\tqc\tx2970\tqc\tx4770\tqc\tx6210\adjustright {\fs19 \tab You type\tab Shown in display\tab X register\tab Y register
\par }\pard \nowidctlpar\tx0\tx1080\tx2880\tx4680\tx6120\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\tx12960\adjustright {\fs19 \tab 2\tab 2\tab 2\tab 0
\par \tab Enter\tab 2.0000\tab 2\tab 2
\par \tab 3\tab 3\tab 3\tab 2
\par \tab +\tab 5.0000\tab 5\tab 0
\par \tab 4\tab 4\tab 4\tab 5
\par \tab \'d7\tab 20.0000\tab 20\tab 0
\par }\pard \nowidctlpar\adjustright {\fs19 
\par The Enter button is only required to separate the numbers (and push the value onto the stack)
\par }{\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab KEY_SEQUENCES}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Key Sequences}}K{\footnote 
\pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab Key Sequences; Blue functions; Yellow functions}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:025}}}{\b\fs36\cf2 Key Sequences}
{\fs19 
\par 
\par Almost every button in WRPN has three functions:
\par \tab \bullet  normal (unshifted) function
\par \tab \bullet  "yellow" function
\par \tab \bullet  "blue" function
\par 
\par To select a "yellow" function, first use the mouse to click on the yellow button marked "ctrl", then click on the desired button.
\par 
\par To select a "blue" function, click on the blue "alt" button, then click on the desired button. 
\par 
\par Optionally, you can press and hold the Ctrl key (on the PC's keyboard) while clicking on a button to get a "yellow" function, or press and hold the Alt key while clicking on a button to get a "blue" function.
\par 
\par The following buttons require an "argument".  Which means that after you click on the button, you must also click some "digit" button (which becomes the "argument" to the function).
\par 
\par \tab STO
\par \tab RCL
\par \tab FLOAT
\par \tab SF
\par \tab CF
\par 
\par For example, to recall a value from register 5, you would use the following sequence:
\par 
\par \tab RCL
\par \tab 5
\par 
\par The "5" never appears on the screen, because it is the argument of the RCL operator.
\par 
\par Certain buttons are also mapped to the keyboard; they are:
\par 
\par \tab 0-9, A-F, +, -, \'d7, and \'f7
\par \tab (Use the "*" key for \'d7, and "/" for \'f7)
\par }{\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab OPERATING_MODES}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Operating Modes}}K{\footnote 
\pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab Operating Modes; Modes; Float Mode; Hex Mode; Decimal Mode; Octal Mode; Binary Mode}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab 
wrpn:030}}}{\b\fs36\cf2 Operating Modes}{\fs19 
\par 
\par WRPN has 5 operating modes:
\par \tab \bullet  Floating point
\par \tab \bullet  Decimal
\par \tab \bullet  Hexadecimal
\par \tab \bullet  Octal
\par \tab \bullet  Binary
\par 
\par Click on the HEX, DEC, OCT, or BIN buttons to enter the appropriate mode.
\par 
\par The FLOAT function is a "yellow" function above the RCL button.  FLOAT requires an argument which is the decimal precision.  For example, to switch to floating point mode with 2 decimal places, enter the following sequence:
\par 
\par \tab FLOAT (use CTRL, then RCL)
\par \tab 2
\par 
\par The float mode will switch to scientific notation whenever the display would otherwise loose precision at the specified number of decimal places.  To force scientific notation, enter a decimal point as the float digit.
\par 
\par Optionally, each of the operating modes can be selected from the window's Menu.
\par 
\par The internal representation of the numbers do change when switching between the floating point and any one of the integer modes.   In some cases, the values may appear to be the same.  However, do not rely on this behavior.  For example,
 the fractional parts of floating point number will be truncated upon entering one of the integer modes... and will not be restored upon return to the floating point mode.
\par 
\par The range of valid input characters is shown below:
\par 
\par }\pard \nowidctlpar\tx720\tx1620\adjustright {\fs19 \tab Hex\tab [0-9] [a-f]
\par \tab Float\tab [0-9] (plus decimal point)
\par \tab Dec\tab [0-9]
\par \tab Oct\tab [0-7]
\par \tab Bin\tab [0-1]
\par }\pard \nowidctlpar\adjustright {\fs19 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab DISPLAY}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Display
}}K{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab Display; flags; Float Mode; Hex Mode; Decimal Mode; Octal Mode; Binary Mode}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab 
\tab wrpn:031}}}{\b\fs36\cf2 Display}{\fs19 
\par 
\par While the yellow F key is pressed (or the Ctrl key on the keyboard), the \ldblquote f\rdblquote  indicator is shown in the bottom portion of the display.  When the blue G key (or Alt key) is pressed, the \ldblquote g\rdblquote  indicator is shown.
\par 
\par The status of the carry bit and the overflow indicator are shown as \ldblquote C\rdblquote  and \ldblquote G\rdblquote .
\par 
\par Control over displaying leading zeros is determined by flag 3.
\par 
\par The numeric display can only contain 32 bits on information while in the 64 bit binary mode.  To indicate that more digits are present, the \ldblquote mode indicator\rdblquote  changes from \ldblquote b\rdblquote  to \ldblquote .b\rdblquote  or 
\ldblquote b.\rdblquote .  The \ldblquote <\rdblquote  left window and \ldblquote >\rdblquote  right window buttons are used to see the other 32 bits.
\par }\pard \nowidctlpar\tx720\tx1620\adjustright {\fs19 
\par }\pard \nowidctlpar\adjustright {\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab FUNCTIONS}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab 
WRPN Functions}}K{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab Functions}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:035}}}{\b\fs36\cf2 Functions}{\fs19 
\par 
\par These are the "normal" functions:
\par }{\fs15 
\par }{\fs15\uldb A}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb B}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb C}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb D}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb E}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb F}{\v\fs15 BASIC}{\fs15 \tab }{
\fs15\uldb 7}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb 8}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb 9}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb \'f7}{\v\fs15 MATH}{\fs15 
\par 
\par }{\fs15\ul GSB}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul GTO}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\uldb HEX}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb DEC}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb OCT}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb BIN}{
\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb 4}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb 5}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb 6}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb \'d7}{\v\fs15 MATH}{\fs15 
\par 
\par }{\fs15\ul R/S}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul SST}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\uldb ROL}{\v\fs15 STACK_REGISTER}{\fs15 \tab }{\fs15\uldb X:Y}{\v\fs15 STACK_REGISTER}{\fs15 \tab }{\fs15\uldb BSP}{\v\fs15 BASIC}{\fs15 \tab \tab }{
\fs15\uldb 1}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb 2}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb 3}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb -}{\v\fs15 MATH}{\fs15 
\par \tab \tab \tab \tab \tab }{\fs15\uldb Enter}{\v\fs15 BASIC}{\fs15 
\par }{\fs15\uldb ON}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb ctrl}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb alt}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb STO}{\v\fs15 STACK_REGISTER}{\fs15 \tab }{\fs15\uldb RCL}{\v\fs15 STACK_REGISTER}{\fs15 \tab \tab }{
\fs15\uldb 0}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb .}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb CHS}{\v\fs15 BASIC}{\fs15 \tab }{\fs15\uldb +}{\v\fs15 MATH}{\fs15 
\par 
\par }{\fs19 
\par These are the "yellow" functions:
\par }{\fs15 
\par }{\fs15\uldb SL}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb SR}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb RL}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb RR}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb RLn}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb RRn}{
\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb MASKL}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb MASKR}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb RMD}{\v\fs15 LOGICAL}{\fs15 \tab }{\fs15\uldb XOR}{\v\fs15 LOGICAL}{\fs15 
\par 
\par \tab \tab }{\fs15\cf11 show\tab show\tab show\tab show}{\fs15 
\par }{\fs15\ul X:(i)}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul X:I}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\uldb HEX}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb DEC}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb OCT}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb BIN}{
\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb SB}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb CB}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\ul B?}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\uldb AND}{\v\fs15 LOGICAL}{\fs15 
\par 
\par \tab \tab }{\fs15\cf11 clear\tab clear\tab clear}{\fs15 \tab \tab }{\fs15\cf11 set\tab set\tab set}{\fs15 
\par }{\fs15\ul (i)}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul I}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul PRGM}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\uldb REG}{\v\fs15 STACK_REGISTER}{\fs15 \tab }{\fs15\uldb PREFIX}{\v\fs15 BASIC}{\fs15 \tab \tab }{
\fs15\uldb 1's}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb 2's}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb UNSGN}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb NOT}{\v\fs15 LOGICAL}{\fs15 
\par \tab \tab \tab \tab \tab }{\fs15\ul WINDOW}{\v\fs15 NOT_USED}{\fs15 
\par \tab \tab \tab }{\fs15\uldb WSIZE}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb FLOAT}{\v\fs15 OPTIONS}{\fs15 \tab \tab }{\fs15\ul MEM}{\v\fs15 NOT_USED}{\fs15 \tab }{\fs15\uldb STATUS}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb EEX}{\v\fs15 BASIC}{\fs15 \tab }
{\fs15\uldb OR}{\v\fs15 LOGICAL}{\fs15 
\par 
\par }{\fs19 
\par These are the "blue" functions:
\par }{\fs15 
\par }{\fs15\uldb LJ}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb ASR}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb RLC}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb RRC}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb RLCn}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb RRCn}{
\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb #B}{\v\fs15 BIT_WISE}{\fs15 \tab }{\fs15\uldb ABS}{\v\fs15 MATH}{\fs15 \tab }{\fs15\uldb DBLR}{\v\fs15 MATH}{\fs15 \tab }{\fs15\uldb DBL\'f7}{\v\fs15\uldb MATH}{\fs15 
\par 
\par }{\fs15\ul RTN}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul LBL}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul DSZ}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul ISZ}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\uldb sqrt}{\v\fs15 MATH}{\fs15 \tab }{\fs15\uldb 1/X}{
\v\fs15 MATH}{\fs15 \tab }{\fs15\uldb SF}{\v\fs15 LOGICAL}{\fs15 \tab }{\fs15\uldb CF}{\v\fs15 LOGICAL}{\fs15 \tab }{\fs15\ul F?}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\uldb DBL\'d7}{\v\fs15\uldb MATH}{\fs15 
\par 
\par }{\fs15\ul P/R}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul BST}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\uldb R up}{\v\fs15 STACK_REGISTER}{\fs15 \tab }{\fs15\ul PSE}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\uldb CLx}{\v\fs15 STACK_REGISTER}{\fs15 \tab 
\tab }{\fs15\ul X<=Y}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul X<0}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul X>Y}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul X>0}{\v\fs15 PROGRAMMING}{\fs15 
\par \tab \tab \tab \tab \tab }{\fs15\uldb LSTx}{\v\fs15 STACK_REGISTER}{\fs15 
\par \tab \tab \tab }{\fs15\uldb <}{\v\fs15 OPTIONS}{\fs15 \tab }{\fs15\uldb >}{\v\fs15 OPTIONS}{\fs15 \tab \tab }{\fs15\ul X!=Y}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul X!=0}{\v\fs15 PROGRAMMING}{\fs15 \tab }{\fs15\ul X=Y}{\v\fs15 PROGRAMMING}{\fs15 \tab }
{\fs15\ul X=0}{\v\fs15 PROGRAMMING}{\fs15 
\par }{\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab BASIC}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Functions: Basic/Input}}K{\footnote 
\pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab Basic Functions; Input Functions; A; B; C; D; E; F; BSP; CHS; ON; ctrl; alt; Enter; clear PREFIX; EEX}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{
\fs19 \tab \tab wrpn:040}}}{\b\fs36\cf2 Functions: Basic/Input}{\fs19 
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par ON\tab - Turns the calculator off.
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 alt\tab -\tab 
Gain access to the "yellow" functions.  The alt button doesn't have a function of its own, it is used to change the function of another button (ie: the function written in yellow immediately above the button).\tab 
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 ctrl\tab -\tab 
Gain access to the "blue" functions.  It is used to change the function of a button to the function written in blue immediately below the button.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 Enter\tab -\tab Used to terminate numeric
 input and push a value onto the stack.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 BSP\tab -\tab 
Backspace.   Erases one character of input.  Also used to clear error messages from the screen.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19  
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 clear PREFIX\tab -\tab 
Clear a pending two-part function.  Functions that require multiple buttons must be terminated in this way.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 [0-9]\tab -\tab 
The digits [0-9] are used to input values or as arguments to other functions.  Obviously, the OCT and BIN modes do not allow digits beyond 7 and 1 respectively.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19  
\par decimal\tab - The decimal point button is only used in the Float mode.
\par  
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 [A-F]\tab -\tab 
The letters [A-F] are used as digits in the HEX mode.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 EEX\tab -\tab 
Enter Exponent.  This button is used for entering scientific notation (float mode only).
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 CHS\tab -\tab 
Change sign.  Used to toggle between a negative and positive value.  If pressed after EEX, it toggles the sign of the exponent.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {
\cs16\super #}{\fs19 \tab \tab OPTIONS}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Functions: Options}}K{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab 
Options; Operating Modes; HEX; DEC; OCT; BIN; show HEX; show DEC; show OCT; show BIN; set 1's; set 2's; set UNSGN; WSIZE; FLOAT; STATUS;<;>}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:045}}}{\b\fs36\cf2 
Functions: Options}{\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 HEX\tab -\tab 
Hexadecimal mode.  All values are displayed as hexadecimal (base 16) numbers.  The HEX mode does not support fractional values.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 DEC\tab -\tab 
Decimal mode.  All values are displayed as decimal (base 10) numbers.  The DEC mode does not support fractional values.  The method of representing negative numbers is discussed below.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 OCT\tab -\tab 
Octal mode.  All values are displayed as octal (base 8) numbers.  The OCT mode does not support fractional values.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19  
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 BIN\tab -\tab 
Binary mode.  All values are displayed as binary (base 2) numbers.  The BIN mode does not support fractional values.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 FLOAT\tab -\tab 
Floating point mode.  All values are displayed as floating point numbers at the requested number of decimal places.  The is a "two part" function that requires a single digit [0-9] as an argum
ent.  The argument is the number of decimal places to be shown in the display.  The display will automatically change to scientific notation if the requested decimal places would otherwise obscure the precision.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 WSIZE\tab -\tab Word size.  Changes the internal w
ord size (bits per word).  WSIZE takes the value of the X register as the argument.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 set 1's\tab -\tab 
Set 1's complement.  Change the representation of negative numbers to 1's complement (DEC mode only).
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 set 2's\tab -\tab Set 2's complement.  Change the representation 
of negative numbers to 2's complement (DEC mode only).  This is the normal representation.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 set UNSGN\tab -\tab 
Set to unsigned complement.  Change the representation of "negative" numbers to unsigned (DEC mode only).
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 show HEX\tab -\tab 
Show the value in the X register as a hexadecimal number, but remain in the current mode.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 show DEC\tab -\tab 
Show the value in the X register as a decimal number, but remain in the current mode.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 show OCT\tab -\tab 
Show the value in the X register as a octal number, but remain in the current mode.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 show BIN\tab -\tab 
Show the value in the X register as a binary number, but remain in the current mode.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 STATUS\tab -\tab 
Display the current status of the word size, complement mode, and carry bit.
\par 
\par 
\par <\tab -\tab Move the display \ldblquote window\rdblquote  32 bits to the left.  In the binary mode, the presence of additional digits to the left is indicated by the \ldblquote .b\rdblquote  mode indicator.
\par 
\par >\tab -\tab Move the display \ldblquote window\rdblquote  32 bits to the right. .  In the binary mode, the presence of additional digits to the right is indicated by the \ldblquote b.\rdblquote  mode indicator.
\par 
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {
\cs16\super #}{\fs19 \tab \tab MATH}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Functions: Mathematics}}K{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab 
Math; sqrt; 1/X; ABS; DBLR; DBL\'d7; DBL\'f7}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:050}}}{\b\fs36\cf2 Functions: Mathematics}{\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 +\tab -\tab 
Addition.  Add the value of the X register to the value of Y register and return the answer in the X register.  Contents of the Y register are lost.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 -\tab -\tab 
Subtraction.  Subtract the value of the X register from the value of Y register and return the answer in the X register.  Contents of the Y register are lost.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 \'d7\tab -\tab 
Multiplication.  Multiply the value of the X register to the value of Y register and return the answer in the X register.  Contents of the Y register are lost. 
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19   
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 \'f7\tab -\tab Division.  Divide the valu
e of the X register into the value of Y register and return the answer in the X register.  Contents of the Y register are lost.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 sqrt\tab -\tab 
Square root.  Performs the square root of the value of the X register and returns the answer to the X register.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 1/x\tab -\tab 
Inverse.  Performs the inverse of the value of the X register and returns the answer to the X register.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 ABS\tab -\tab 
Absolute value.  Performs the absolute value of the value of the X register and returns the answer to the X register.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 DBL\'d7\tab -\tab Double precision mu
ltiplication.  Multiply the value of the X register to the value of the Y register and returns the answer split between the X and Y registers.  The X register contains the right-most bits (as defined by word size), the Y register contains the left-most bi
ts.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 DBL\'f7\tab -\tab 
Double precision division.  Divide the value split between the Y and Z registers into the value
 of the X register and return the answer in the X register.  The Y register contains the left-most bits (as defined by word size), the X register contains the right-most bits.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 DBLR\tab -\tab 
Double precision remainder (modulus).  Performs the modulus of the value
 split between the X and Z registers into the value of the X register and return the answer in the X register.  The Y register contains the left-most bits (as defined by word size), the X register contains the right-most bits.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {
\cs16\super #}{\fs19 \tab \tab STACK_REGISTER}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Functions: Stack/Register}}K{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab 
Stack Functions; Register Functions; ROL; X:Y; STO; RCL; clear REG; R up; CLx; LSTx}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:055}}}{\b\fs36\cf2 Functions: Stack/Register}{\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 ROL\tab -\tab 
Roll the stack down.  The contents of the stack are rolled from top to bottom (and wrap around to the top).
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 R up\tab -\tab 
Roll the stack up.  The contents of the stack are rolled from bottom to top (and wrap around to the bottom).
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 X:Y\tab -\tab 
Exchange X and Y.  Exchange the values of the X and Y registers.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 CLx\tab -\tab Clear the X register.  The contents of the X registe
r are set to zero.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 LSTx\tab -\tab 
Last X.  The previous contents of the X register are placed into the X register.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 STO\tab -\tab Store.  Store the value of the
 X register into a "storage register".  This is a "two part" function which requires a single digit [0-9][A-F] as an argument or a single digit and the decimal point [.0-.9][.A-.F].  The argument is the "name" of the register to receive the value.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 RCL\tab -\tab R
ecall.  Recall the value from a "storage register" into the X register.  This is a "two-part" function which requires a single digit digit [0-9][A-F] as an argument or a single digit and the decimal point [.0-.9][.A-.F].  The argument is the "name" of the
 register from which to get the value.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 Clear REG\tab -\tab 
Clear registers.  Clears all "storage registers".  All registers are set to values of zero.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {
\cs16\super #}{\fs19 \tab \tab LOGICAL}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Functions: Logical Operators}}K{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab 
Logical Operators; RMD; XOR; AND; NOT; OR}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:060}}}{\b\fs36\cf2 Functions: Logical Operators}{\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 AND\tab -\tab 
Performs a logical "and" on the contents of the X and Y registers.  The answer is returned to the X register.  The contents of the Y register are lost.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 OR\tab -\tab 
Performs a logical "or" on the contents of the X and Y registers.  The answer is returned to the X register.  The contents of the Y register are lost.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 XOR\tab -\tab 
Exclusive or.  Performs a logical "exclusive or" on the contents of the X and Y registers.  The answer is returned to the X register.  The contents of the Y register are lost.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 NOT\tab -\tab 
Not (1's complement).  Performs a 1's complement on the contents of the X register.  The answer is returned to the X register.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 RMD\tab -\tab 
Remainder (modulus). Performs a modulus on the contents of the X and Y registers.  The answer is returned to the X register.  The contents of the Y register are lost.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {
\cs16\super #}{\fs19 \tab \tab BIT_WISE}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Functions: Bit-wise Operators}}K{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab 
Bit-wise Operators; SL; SR; RL; RR; RLn; RRn; MASKL; MASKR; SB; CB; LJ; ASR; RLC; RRC; RLCn; RRCn; #B; SF; CF}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:065}}}{\b\fs36\cf2 Functions: Bit-wise Operators}
{\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 SL\tab -\tab 
Shift Left.  Shift the bit pattern in the X register to the left.  The left-most bit is preserved in the carry bit variable.  The new right-most bit is replaced with a zero.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 SR\tab -\tab Shift Right.  Shift the bit pattern in t
he X register to the right.  The right-most bit is preserved in the carry bit variable.  The new left-most bit is replaced with a zero.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 ASR\tab -\tab 
Arithmetic Shift Right.  Shift the bit pattern in the X register to the right but preserve the left-most (sign) bit.  The right-most bit is preserved in the carry bit variable.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 RR\tab -\tab 
Rotate Right.  Rotate the bit pattern in the X register to the right.  The right-most bit is copied to the new left-most position and preserved in the carry bit variable.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 RRn\tab -\tab Rotate 
Right "n" times.  Rotate the bit pattern in the Y register to the right the number of times indicated by the value of the X register.  The right-most bits are copied to new left-most positions.  The carry bit contains the last right-most bit rotated.

\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 RRC\tab -\tab 
Rotate Right with Carry.  Rotate the bit pattern in the X register to the right and include the carry bit (between the left-most and right-most positions).  The right-most position is preserved in the carry bit variable.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 RRCn\tab -\tab Rotate Right with Carry "
n" times.  Rotate the bit patten in the Y register to the right (including the carry bit) the number of times indicated by the value of the X register.  The carry bit contains the last right-most bit rotated.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 RL\tab -\tab 
Rotate Left.  Rotate the bit pattern in the X register to the left.  The left-most bit is copied to the new right-most position and preserved in the carry bit variable.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 RLn\tab -\tab 
Rotate Left "n" times.  Rotate the bit pattern in the Y register to the left the number of times indicated by the value of the X register.  The left-most bits are copied to new right-most positions.  The carry bit contains the last right-most bit rotated.

\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 RLC\tab -\tab 
Rotate Left with Carry.  Rotate the bit pattern in the X register to the left and include the carry bit (between the left-most and right-most positions).  The left-most position is preserved in the carry bit variable.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 RLCn\tab -\tab 
Rotate Left with Carry "n" times.  Rotate the bit patten in the Y register to the left (including the carry bit) the number of times indicated by the value of the X register.  The carry bit contains the last left-most bit rotated.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 MASKR\tab -\tab 
Mask Right.  Create a right justified bit-wise mask.  The number of bits in the mask is the value of the X register.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 MASKL\tab -\tab 
Mask Left.  Create a left justified bit-wise mask.  The number of bits in the mask is the value of the X register. 
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 SB\tab -\tab 
Set Bit.  Set a bit to 1 in the value of the Y register.  The number of the bit to set is the value of the the X register.  The answer is returned in the X register.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 CB\tab -\tab 
Clear Bit.  Clear a bit (set to 0) in the value of the Y register.  The number of the bit to clear is the value of the X register.  The answer is returned in the X register.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par }\pard \fi-1620\li1620\nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 #B\tab -\tab Sum Bits.  Perform a summation
 of the number of set (value of 1) bits in the value of the X register.  Returns the answer in the X register.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx1440\tx1620\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par 
\par SF\tab -\tab Set Flag.  Set the flag specified in the X register to 1.
\par 
\par CF\tab -\tab Clear Flag.  Set the flag specified in the X register to 0.
\par }\pard \nowidctlpar\adjustright {\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab PROGRAMMING}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab 
Programming WRPN}}K{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab 
Programming; GSB; GTO; R/S; SST; X:(I); X:I; (I); I; clear PRGM; B?; RTN; LBL; DSZ; ISZ; F?; P/R; BST; PSE; X<=Y; X<0; X>Y; X>0; X!=Y; X!=0; X=Y; X=0}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:070}}}{
\b\fs36\cf2 Programming}{\fs19 
\par 
\par WRPN does not currently support programming.  Pressing any of the programming function buttons will result in an error message.
\par 
\par Consequently, the Menu "File" functions for Open, Close, Print, etc., are not yet functional.
\par 
\par See also: }{\fs19\uldb Future Directions}{\v\fs19 FUTURE_DIRECTIONS}{\fs19 
\par 
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx720\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 \tab GSB\tab - Go to subroutine
\par \tab GTO\tab - Go to label
\par \tab R/S\tab - Run or Programming mode
\par \tab SST\tab - Single step through a program
\par \tab X:(I)\tab - Exchange X with referenced variable I
\par \tab X:I\tab - Exchange X with I
\par \tab (i)\tab - Reference I
\par \tab I\tab - The I (index) register
\par \tab B?\tab - Test bit 
\par \tab RTN\tab - Return from subroutine
\par \tab LBL\tab - Label
\par \tab DSZ\tab - Decrement and skip on zero
\par \tab ISZ\tab - Increment and skip on zero
\par \tab F?\tab - Test flag (carry bit)
\par \tab P/R\tab - Pause or resume
\par \tab BST\tab - Back step through a program
\par \tab PSE\tab - Pause
\par \tab X<=Y\tab - If (x <=y ) then...
\par \tab X<0\tab - If (x < 0) then...
\par \tab X>Y\tab - If (X > Y) then...
\par \tab X>0\tab - If (X > 0) then...
\par \tab X!=Y\tab - If (X != Y) then...
\par \tab X!=0\tab - If (X != 0) then...
\par \tab X=Y\tab - If (X = Y) then...
\par \tab X=0\tab - If (X = 0) then...
\par }\pard \nowidctlpar\adjustright {\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab FUTURE_DIRECTIONS}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab 
\tab Future Directions}}K{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab Future Directions; Programming}}+{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super +}{\fs19 \tab \tab wrpn:075}}}{
\b\fs36\cf2 Future Directions}{\fs19 
\par 
\par \tab \bullet  Add the missing programming functions?
\par \tab \bullet  Add a "paper tape" option in the Menu
\par \tab \bullet  Add support for an INI file, to store values and options 
\par 
\par I also need to put more work into this help file (If you don't already use/enjoy the RPN notation, this help file certainly won't be sufficient).
\par 
\par }\pard \nowidctlpar\tx3600\adjustright {\fs19 Emmet P. Gray\tab HQ, III Corps & Fort Hood
\par }{\field{\*\fldinst {\fs19  HYPERLINK mailto:graye@hood-emh3.army.mil }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001900000067007200610079006500400068006f006f0064002d0065006d00680033002e00610072006d0079002e006d0069006c000000e0c9ea79f9bace118c8200aa004ba90b400000006d00610069006c0074006f003a006700720061007900650040006800
6f006f0064002d0065006d00680033002e00610072006d0079002e006d0069006c000000000000000000000000}}}{\fldrslt {\cs17\ul\cf2 graye@hood-emh3.army.mil}}}{\fs19 \tab Attn: AFZF-PW-ENV
\par \tab Directorate of Public Works
\par \tab Environmental Division
\par \tab Fort Hood, TX 76544
\par }\pard \nowidctlpar\adjustright {\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab PUBLIC_DOMAIN}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab 
Public Domain}}}{\b\fs19\cf2 Public Domain}{\fs19 
\par 
\par Public Domain means that you can do anything you want with this program.  You can use any or all of the source
 code in any way you chose.  You can even attempt to make money from this program.  There are no licenses, copyrights, (or copylefts).  There are no user or registration fees.
\par }{\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab STACK}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Stack}}}{\b\fs19\cf2 Stack
\par }{\fs19 
\par The stack is a holding place for numbers prior to be
ing "used" by some operator.  The Enter button places items on the stack.  Functions such as "+" (for addition), will remove numbers from the stack.  The WRPN stack operates as a Last In, First Out (LIFO) 4 position stack.
\par }{\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab REGISTERS}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Registers}}}{\b\fs19\cf2 Registers

\par }{\fs19 
\par WRPN has 32 storage registers.  A storage register is a place you choose to store a number.  Registers are more "permanent" than the stack; their values remain until you replace or clear them.  The 32 registers are 
\par \tab 0-9
\par \tab A-F
\par \tab .0-.9
\par \tab .A-.F
\par }{\fs24 \page }{\cs16\super #{\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super #}{\fs19 \tab \tab NOT_USED}}${\footnote \pard\plain \nowidctlpar\adjustright \f1\fs20 {\cs16\super $}{\fs19 \tab \tab Not Used}}K{\footnote \pard\plain 
\nowidctlpar\adjustright \f1\fs20 {\cs16\super K}{\fs19 \tab \tab WINDOW; MEM }}}{\b\fs19\cf2 Not Used}{\fs19 
\par 
\par Some of the features of the original HP-16c have no counterpart in WRPN.  For example, the MEM command is designed to show the amount of memory available in the calculator.
\par }\pard \nowidctlpar\tx-1080\tx-720\tx0\tx720\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\tx11520\tx12240\adjustright {\fs19 
\par \tab WINDOW\tab - display the given window in the screen
\par \tab MEM\tab - display status of memory
\par 
\par 
\par }}